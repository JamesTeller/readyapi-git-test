<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="333b3b92-bc99-4628-afcb-90672b2992ea" created="2.7.0-m-SNAPSHOT" activeEnvironment="Default environment" name="Git Example Project" resourceRoot="" updated="3.0.0-SNAPSHOT" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:description/>
  <con:settings>
    <con:setting id="333b3b92-bc99-4628-afcb-90672b2992eafileName">Git-Example-Project</con:setting>
  </con:settings>
  <con:apis id="a94ced58-1f55-4bfa-b1f0-b8f3b94aacbb" name="APIs">
    <con:settings/>
  </con:apis>
  <con:functionalTests id="066b533a-512b-4137-ae5f-e018ae306a7d" name="Functional &amp; Security Tests">
    <con:settings/>
  </con:functionalTests>
  <con:securityTests id="659f4743-4d00-4a58-a552-b5b5491a04bf" name="Security Tests">
    <con:settings/>
  </con:securityTests>
  <con:mockServices id="26c64fc0-df36-49c8-a073-c3c348d29fef" name="Virtual Services">
    <con:settings/>
  </con:mockServices>
  <con:loadUITests id="152500d0-70bf-4557-9c7a-70788c5597f3" name="Load Tests">
    <con:settings/>
  </con:loadUITests>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
